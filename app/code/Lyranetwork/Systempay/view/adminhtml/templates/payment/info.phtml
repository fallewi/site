<?php
/**
 * Systempay V2-Payment Module version 2.3.2 for Magento 2.x. Support contact : supportvad@lyra-network.com.
 *
 * NOTICE OF LICENSE
 *
 * This source file is licensed under the Open Software License version 3.0
 * that is bundled with this package in the file LICENSE.txt.
 * It is also available through the world-wide-web at this URL:
 * https://opensource.org/licenses/osl-3.0.php
 *
 * @category  Payment
 * @package   Systempay
 * @author    Lyra Network (http://www.lyra-network.com/)
 * @copyright 2014-2018 Lyra Network and contributors
 * @license   https://opensource.org/licenses/osl-3.0.php  Open Software License (OSL 3.0)
 */
?>

<p><b>
    <?php echo $block->escapeHtml($block->getMethod()->getTitle()); ?>

    <?php
    $payment = $block->getInfo();

    if (stripos($payment->getMethod(), 'systempay_multi') === 0) {
        // payment in installments, show selected option
        $option = $payment->getAdditionalInformation(\Lyranetwork\Systempay\Helper\Payment::MULTI_OPTION);
        if (is_string($option)) {
            $option = @unserialize($option);
        }

        if (is_array($option) && !empty($option)) {
            echo '<br />';
            echo $block->escapeHtml($option['label'] . ' (' . $option['count'] . 'X)');
        }
    } elseif ($payment->getMethod() === 'systempay_oney') {
        // Oney payment, show selected Oney option
        $option = $payment->getAdditionalInformation(\Lyranetwork\Systempay\Helper\Payment::ONEY_OPTION);
        if (is_string($option)) {
            $option = @unserialize($option);
        }

        if (is_array($option) && !empty($option)) {
            echo '<br />';
            echo $block->escapeHtml($option['label']);
        }
    }
    ?>
</b></p>

<?php
if ($payment->getCcTransId()) {
    echo $block->getResultDescHtml();
    echo '<br /><br />';

    echo '<b>' . __('Transaction ID') . ': </b>' . $block->escapeHtml($payment->getCcTransId());
    echo '<br />';

    if (stripos($payment->getMethod(), 'systempay_multi') === false) {
        echo '<b>' . __('Transaction UUID') . ': </b>' . $block->escapeHtml($payment->getAdditionalInformation(\Lyranetwork\Systempay\Helper\Payment::TRANS_UUID));
        echo '<br />';
    }

    if ($payment->getCcType() == 'MULTI') { // multi brand
        echo $block->getTransactionsDetailsHtml();
    } else {
        echo $block->getPaymentDetailsHtml();
    }

    // risk control result translations
    $riskControl = $payment->getAdditionalInformation(\Lyranetwork\Systempay\Helper\Payment::RISK_CONTROL);
    if (is_string($riskControl)) {
        $riskControl = @unserialize($riskControl);
    }

    if (is_array($riskControl) && !empty($riskControl)) {
        echo '<br />';
        echo '<b>' . __('Fraud Control Result:') . '</b>';

        $colors = [
            'OK' => '#4F8A10',
            'WARNING' => '#9F6000',
            'ERROR' => '#D8000C'
        ];

        foreach ($riskControl as $key => $value) {
            echo '<br />&nbsp;&nbsp;- ' . $block->escapeHtml($block->translate($key, 'risk_control')) . ' : ';
            echo '<span style="color: ' . $block->escapeHtml($colors[$value]) . ';">' .
                $block->escapeHtml($value) . '</span>';
        }
    }

    $riskAssessment = $payment->getAdditionalInformation(\Lyranetwork\Systempay\Helper\Payment::RISK_ASSESSMENT);
    if (is_string($riskAssessment)) {
        $riskAssessment = @unserialize($riskAssessment);
    }

    if (is_array($riskAssessment) && !empty($riskAssessment)) {
        echo '<br />';
        echo '<b>' . __('Advanced Risk Assessment Result:') . '</b>';

        foreach ($riskAssessment as $value) {
            echo '<br />&nbsp;&nbsp;- ' . $block->escapeHtml($block->translate($value, 'risk_assessment'));
        }
    }

    echo '<br />';
}